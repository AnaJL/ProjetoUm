#Não Está terminado

class No:
    def __init__(self, dado = None, proximo = None):
        self._dado = dado
        self._proximo = proximo
    def get_dado(self):
        return self._dado
    def set_dado(self, novoDado):
        self._dado = novoDado
    def get_proximo(self):
        return self._proximo
    def set_proximo(self, outro):
        self._proximo = outro
    def size(self):
        return len(self._dado)
    def __str__(self):
        return "{}".format(self._dado)

class Lista:
    def __init__(self, head = None):
        self._head = head
        self._size = 0
    def mostrar(self, index):
        p = self._head
        for i in range(index):
            if p.get_proximo() != None:
                p = p.get_proximo()
        return print(p)
    def isEmpty(self): #Vazia
        return self._head == None
    def size(self): #Tamanho
        p = self._head
        count = 0
        while p.get_proximo() != None:
            count = count + 1
            p = p.get_proximo()
        return count
    def insertInicio(self, elem):  #No Inicio
            no = No(elem)
            no.set_proximo(self._head)
            self._head = no
    def insertMeio(self,elem): #No Meio
        p = self._head
        while(p.get_proximo() != None):
            p = p.get_proximo()
        q = No()
        q.set_dado(elem)
        p.set_proximo(q)
        q.set_proximo(None)
    def insertFim(self, elem): #No Fim
        p = self._head
        while(p.get_proximo() != None):
            p = p.get_proximo()
        p.set_proximo(elem)
    def printar_all(self):
        p = self._head
        while(p !=None):
            print(p)
            p = p.get_proximo()



p = No(3)
lista = Lista(p)
lista.insertInicio(3)
lista.insertFim(2)
lista.insertMeio(5)
lista.printar_all()
